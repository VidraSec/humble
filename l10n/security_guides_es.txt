# 'humble' (Analizador de cabeceras HTTP)
# https://github.com/rfc-st/humble/
#
# Licencia MIT
#
# Copyright (c) 2020-2025 Rafa 'Bluesman' Faura (rafael.fcucalon@gmail.com)
#
# Por la presente se concede permiso, libre de cargos, a cualquier persona que
# obtenga una copia de este software y de los archivos de documentación
# asociados (el "Software"), a utilizar el Software sin restricción,
# incluyendo sin limitación los derechos a usar, copiar, modificar, fusionar,
# publicar, distribuir, sublicenciar, y/o vender copias del Software, y a
# permitir a las personas a las que se les proporcione el Software a hacer lo
# mismo, sujeto a las siguientes condiciones:

# El aviso de copyright anterior y este aviso de permiso se incluirán en todas
# las copias o partes sustanciales del Software.

# EL SOFTWARE SE PROPORCIONA "COMO ESTÁ", SIN GARANTÍA DE NINGÚN TIPO, EXPRESA O
# IMPLÍCITA, INCLUYENDO PERO NO LIMITADO A GARANTÍAS DE COMERCIALIZACIÓN,
# IDONEIDAD PARA UN PROPÓSITO PARTICULAR E INCUMPLIMIENTO. EN NINGÚN CASO LOS
# AUTORES O PROPIETARIOS DE LOS DERECHOS DE AUTOR SERÁN RESPONSABLES DE NINGUNA
# RECLAMACIÓN, DAÑOS U OTRAS RESPONSABILIDADES, YA SEA EN UNA ACCIÓN DE CONTRATO,
# AGRAVIO O CUALQUIER OTRO MOTIVO, DERIVADAS DE, FUERA DE O EN CONEXIÓN CON EL
# SOFTWARE O SU USO U OTRO TIPO DE ACCIONES EN EL SOFTWARE.

Guías para habilitar cabeceras de respuesta HTTP de seguridad en frameworks, servidores y servicios populares:

[Amazon Web Services]
https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/example-function-add-security-headers.html
https://dev.to/kumo/deliver-perfect-http-security-headers-with-aws-cloudfront-4din

[Angular]
https://angular.dev/best-practices/security
https://learn.microsoft.com/en-us/answers/questions/1376588/how-to-remove-unwanted-security-headers-for-my-ang

[Apache HTTP Server]
https://htaccessbook.com/important-security-headers/
https://geekflare.com/apache-web-server-hardening-security/
https://www.adminbyaccident.com/security/how-to-harden-apache-http/
https://www.digitalocean.com/community/tutorials/recommended-steps-to-harden-apache-http-on-freebsd-12-0

[Cloudflare]
https://developers.cloudflare.com/workers/examples/security-headers/
https://algustionesa.com/security-headers/

[LiteSpeed Web Server]
https://docs.litespeedtech.com/lsws/security-headers/

[Microsoft Internet Information Services]
https://geekflare.com/http-header-implementation/
https://www.ryadel.com/en/iis-web-config-secure-http-response-headers-pass-securityheaders-io-scan/
https://beaglesecurity.com/blog/article/hardening-server-security-by-implementing-security-headers.html

[Nginx]
https://www.acunetix.com/blog/web-security-zone/hardening-nginx/
https://www.getpagespeed.com/server-setup/nginx-security-headers-the-right-way

[Node.js]
https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html
https://blog.logrocket.com/using-helmet-node-js-secure-application/
https://blog.risingstack.com/node-js-security-checklist/

[Spring]
https://docs.spring.io/spring-security/reference/servlet/exploits/headers.html
https://docs.spring.io/spring-security/reference/features/exploits/headers.html
https://www.baeldung.com/spring-security-csp

[WordPress]
https://www.wpdownloadmanager.com/http-security-headers-on-wordpress/
https://www.wpbeginner.com/beginners-guide/how-to-add-http-security-headers-in-wordpress/
